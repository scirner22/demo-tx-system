<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="358" onload="init(evt)" viewBox="0 0 1200 358" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;

		// use GET parameters to restore a flamegraphs state.
		var params = get_params();
		if (params.x && params.y)
			zoom(find_group(document.querySelector('[x="' + params.x + '"][y="' + params.y + '"]')));
                if (params.s) search(params.s);
	}

	// event listeners
	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
			if (!document.querySelector('.parent')) {
				clearzoom();
				return;
			}

			// set parameters for zoom state
			var el = target.querySelector("rect");
			if (el && el.attributes && el.attributes.y && el.attributes._orig_x) {
				var params = get_params()
				params.x = el.attributes._orig_x.value;
				params.y = el.attributes.y.value;
				history.replaceState(null, null, parse_params(params));
			}
		}
		else if (e.target.id == "unzoom") clearzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
		else if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function get_params() {
		var params = {};
		var paramsarr = window.location.search.substr(1).split('&');
		for (var i = 0; i < paramsarr.length; ++i) {
			var tmp = paramsarr[i].split("=");
			if (!tmp[0] || !tmp[1]) continue;
			params[tmp[0]]  = decodeURIComponent(tmp[1]);
		}
		return params;
	}
	function parse_params(params) {
		var uri = "?";
		for (var key in params) {
			uri += key + '=' + encodeURIComponent(params[key]) + '&';
		}
		if (uri.slice(-1) == "&")
			uri = uri.substring(0, uri.length - 1);
		if (uri == '?')
			uri = window.location.href.split('?')[0];
		return uri;
	}
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}
	function clearzoom() {
		unzoom();

		// remove zoom state
		var params = get_params();
		if (params.x) delete params.x;
		if (params.y) delete params.y;
		history.replaceState(null, null, parse_params(params));
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
		var params = get_params();
		delete params.s;
		history.replaceState(null, null, parse_params(params));
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) search(term);
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (term) currentSearchTerm = term;

		var re = new RegExp(currentSearchTerm, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;
		var params = get_params();
		params.s = currentSearchTerm;
		history.replaceState(null, null, parse_params(params));

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="358.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="341" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="341" > </text>
<g id="frames">
<g >
<title>payments-engine`csv::reader::Reader$LT$R$GT$::headers::he77ebe7db43788da (1 samples, 0.40%)</title><rect x="149.9" y="181" width="4.7" height="15.0" fill="rgb(227,68,13)" rx="2" ry="2" />
<text  x="152.92" y="191.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (7 samples, 2.77%)</title><rect x="914.8" y="101" width="32.7" height="15.0" fill="rgb(254,20,15)" rx="2" ry="2" />
<text  x="917.82" y="111.5" >li..</text>
</g>
<g >
<title>libsystem_kernel.dylib`madvise (1 samples, 0.40%)</title><rect x="47.3" y="181" width="4.7" height="15.0" fill="rgb(244,27,2)" rx="2" ry="2" />
<text  x="50.31" y="191.5" ></text>
</g>
<g >
<title>payments-engine`core::num::_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u16$GT$::from_str::h82bc0e04a6132d47 (2 samples, 0.79%)</title><rect x="135.9" y="133" width="9.4" height="15.0" fill="rgb(240,97,3)" rx="2" ry="2" />
<text  x="138.93" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_realloc (1 samples, 0.40%)</title><rect x="187.2" y="101" width="4.7" height="15.0" fill="rgb(253,156,12)" rx="2" ry="2" />
<text  x="190.23" y="111.5" ></text>
</g>
<g >
<title>libdyld.dylib`start (251 samples, 99.21%)</title><rect x="19.3" y="277" width="1170.7" height="15.0" fill="rgb(241,84,0)" rx="2" ry="2" />
<text  x="22.33" y="287.5" >libdyld.dylib`start</text>
</g>
<g >
<title>libsystem_kernel.dylib`read (1 samples, 0.40%)</title><rect x="149.9" y="165" width="4.7" height="15.0" fill="rgb(252,10,44)" rx="2" ry="2" />
<text  x="152.92" y="175.5" ></text>
</g>
<g >
<title>payments-engine`core::num::_$LT$impl$u20$core..str..traits..FromStr$u20$for$u20$u32$GT$::from_str::h8c84c4be1f376aeb (2 samples, 0.79%)</title><rect x="126.6" y="133" width="9.3" height="15.0" fill="rgb(241,105,25)" rx="2" ry="2" />
<text  x="129.60" y="143.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_all::hd621440410b66c32 (9 samples, 3.56%)</title><rect x="1040.8" y="133" width="41.9" height="15.0" fill="rgb(233,206,42)" rx="2" ry="2" />
<text  x="1043.75" y="143.5" >pay..</text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_free_definite_size (2 samples, 0.79%)</title><rect x="751.6" y="149" width="9.3" height="15.0" fill="rgb(230,193,40)" rx="2" ry="2" />
<text  x="754.58" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (7 samples, 2.77%)</title><rect x="373.8" y="85" width="32.6" height="15.0" fill="rgb(222,212,5)" rx="2" ry="2" />
<text  x="376.79" y="95.5" >li..</text>
</g>
<g >
<title>payments-engine`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h76b74fc43f9b8b37 (1 samples, 0.40%)</title><rect x="14.7" y="229" width="4.6" height="15.0" fill="rgb(205,60,36)" rx="2" ry="2" />
<text  x="17.66" y="239.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (1 samples, 0.40%)</title><rect x="1040.8" y="101" width="4.6" height="15.0" fill="rgb(239,163,36)" rx="2" ry="2" />
<text  x="1043.75" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (19 samples, 7.51%)</title><rect x="317.8" y="101" width="88.6" height="15.0" fill="rgb(221,129,45)" rx="2" ry="2" />
<text  x="320.83" y="111.5" >libsystem_..</text>
</g>
<g >
<title>payments-engine`core::num::dec2flt::dec2flt::h801a941369be59c3 (3 samples, 1.19%)</title><rect x="98.6" y="133" width="14.0" height="15.0" fill="rgb(238,14,11)" rx="2" ry="2" />
<text  x="101.62" y="143.5" ></text>
</g>
<g >
<title>payments-engine`csv::deserializer::deserialize_string_record::hd81238066bfc60d9 (21 samples, 8.30%)</title><rect x="52.0" y="181" width="97.9" height="15.0" fill="rgb(211,10,26)" rx="2" ry="2" />
<text  x="54.98" y="191.5" >payments-en..</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (4 samples, 1.58%)</title><rect x="219.9" y="85" width="18.6" height="15.0" fill="rgb(205,126,28)" rx="2" ry="2" />
<text  x="222.88" y="95.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__mmap (1 samples, 0.40%)</title><rect x="28.7" y="229" width="4.6" height="15.0" fill="rgb(216,214,8)" rx="2" ry="2" />
<text  x="31.66" y="239.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_realloc (11 samples, 4.35%)</title><rect x="191.9" y="101" width="51.3" height="15.0" fill="rgb(221,58,38)" rx="2" ry="2" />
<text  x="194.90" y="111.5" >libsy..</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (3 samples, 1.19%)</title><rect x="784.2" y="133" width="14.0" height="15.0" fill="rgb(226,63,15)" rx="2" ry="2" />
<text  x="787.23" y="143.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`__exit (2 samples, 0.79%)</title><rect x="19.3" y="261" width="9.4" height="15.0" fill="rgb(222,22,43)" rx="2" ry="2" />
<text  x="22.33" y="271.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_calloc (1 samples, 0.40%)</title><rect x="653.6" y="133" width="4.7" height="15.0" fill="rgb(246,87,14)" rx="2" ry="2" />
<text  x="656.64" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (17 samples, 6.72%)</title><rect x="672.3" y="117" width="79.3" height="15.0" fill="rgb(234,127,26)" rx="2" ry="2" />
<text  x="675.29" y="127.5" >libsystem..</text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_all::hd621440410b66c32 (3 samples, 1.19%)</title><rect x="1017.4" y="117" width="14.0" height="15.0" fill="rgb(250,33,41)" rx="2" ry="2" />
<text  x="1020.43" y="127.5" ></text>
</g>
<g >
<title>payments-engine`std::io::buffered::bufwriter::BufWriter$LT$W$GT$::write_all_cold::h716d6bcf76e20628 (1 samples, 0.40%)</title><rect x="1012.8" y="117" width="4.6" height="15.0" fill="rgb(247,158,52)" rx="2" ry="2" />
<text  x="1015.77" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_calloc (22 samples, 8.70%)</title><rect x="308.5" y="133" width="102.6" height="15.0" fill="rgb(207,28,14)" rx="2" ry="2" />
<text  x="311.50" y="143.5" >libsystem_ma..</text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::h0e1a475af27637d4 (9 samples, 3.56%)</title><rect x="1040.8" y="117" width="41.9" height="15.0" fill="rgb(251,89,8)" rx="2" ry="2" />
<text  x="1043.75" y="127.5" >pay..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (14 samples, 5.53%)</title><rect x="481.1" y="149" width="65.3" height="15.0" fill="rgb(218,189,1)" rx="2" ry="2" />
<text  x="484.07" y="159.5" >libsyst..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.79%)</title><rect x="210.6" y="53" width="9.3" height="15.0" fill="rgb(220,107,15)" rx="2" ry="2" />
<text  x="213.55" y="63.5" ></text>
</g>
<g >
<title>payments-engine`csv::writer::Writer$LT$W$GT$::serialize::hc5b0263cba903c62 (19 samples, 7.51%)</title><rect x="1008.1" y="181" width="88.6" height="15.0" fill="rgb(224,26,13)" rx="2" ry="2" />
<text  x="1011.10" y="191.5" >payments-e..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (3 samples, 1.19%)</title><rect x="205.9" y="69" width="14.0" height="15.0" fill="rgb(220,72,9)" rx="2" ry="2" />
<text  x="208.89" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_try_realloc_in_place (1 samples, 0.40%)</title><rect x="238.5" y="85" width="4.7" height="15.0" fill="rgb(223,102,13)" rx="2" ry="2" />
<text  x="241.54" y="95.5" ></text>
</g>
<g >
<title>payments-engine`hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::get_mut::hb2a059796f2b0347 (2 samples, 0.79%)</title><rect x="1110.7" y="181" width="9.3" height="15.0" fill="rgb(243,73,48)" rx="2" ry="2" />
<text  x="1113.71" y="191.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (20 samples, 7.91%)</title><rect x="802.9" y="149" width="93.3" height="15.0" fill="rgb(252,121,22)" rx="2" ry="2" />
<text  x="805.89" y="159.5" >libsystem_m..</text>
</g>
<g >
<title>libsystem_malloc.dylib`realloc (16 samples, 6.32%)</title><rect x="182.6" y="133" width="74.6" height="15.0" fill="rgb(241,61,18)" rx="2" ry="2" />
<text  x="185.57" y="143.5" >libsyste..</text>
</g>
<g >
<title>payments-engine`csv::writer::Writer$LT$W$GT$::write_terminator::h9c9be63ab9091967 (2 samples, 0.79%)</title><rect x="1008.1" y="165" width="9.3" height="15.0" fill="rgb(222,4,53)" rx="2" ry="2" />
<text  x="1011.10" y="175.5" ></text>
</g>
<g >
<title>payments-engine`bstr::unicode::whitespace::whitespace_len_rev::h48feba576a1d56fc (5 samples, 1.98%)</title><rect x="607.0" y="149" width="23.3" height="15.0" fill="rgb(250,137,0)" rx="2" ry="2" />
<text  x="610.00" y="159.5" >p..</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (10 samples, 3.95%)</title><rect x="900.8" y="133" width="46.7" height="15.0" fill="rgb(240,48,49)" rx="2" ry="2" />
<text  x="903.83" y="143.5" >libs..</text>
</g>
<g >
<title>payments-engine`alloc::raw_vec::RawVec$LT$T$C$A$GT$::reserve::do_reserve_and_handle::h5eeb92ac417831c2 (16 samples, 6.32%)</title><rect x="182.6" y="165" width="74.6" height="15.0" fill="rgb(248,86,45)" rx="2" ry="2" />
<text  x="185.57" y="175.5" >payments..</text>
</g>
<g >
<title>payments-engine`_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$::deserialize::hd9dc56c4d631148c (2 samples, 0.79%)</title><rect x="135.9" y="149" width="9.4" height="15.0" fill="rgb(252,129,11)" rx="2" ry="2" />
<text  x="138.93" y="159.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$$RF$mut$u20$csv..serializer..SeRecord$LT$W$GT$$u20$as$u20$serde..ser..SerializeStruct$GT$::serialize_field::he907b22bfea837bb (4 samples, 1.58%)</title><rect x="1017.4" y="149" width="18.7" height="15.0" fill="rgb(223,83,22)" rx="2" ry="2" />
<text  x="1020.43" y="159.5" ></text>
</g>
<g >
<title>payments-engine`hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::insert::hcc23077e4f8a4bc8 (15 samples, 5.93%)</title><rect x="1120.0" y="181" width="70.0" height="15.0" fill="rgb(250,113,30)" rx="2" ry="2" />
<text  x="1123.04" y="191.5" >payment..</text>
</g>
<g >
<title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memset (1 samples, 0.40%)</title><rect x="686.3" y="101" width="4.6" height="15.0" fill="rgb(209,134,24)" rx="2" ry="2" />
<text  x="689.28" y="111.5" ></text>
</g>
<g >
<title>payments-engine`alloc::raw_vec::finish_grow::ha423e93469327183 (16 samples, 6.32%)</title><rect x="182.6" y="149" width="74.6" height="15.0" fill="rgb(226,71,30)" rx="2" ry="2" />
<text  x="185.57" y="159.5" >payments..</text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memmove$VARIANT$Haswell (1 samples, 0.40%)</title><rect x="593.0" y="149" width="4.7" height="15.0" fill="rgb(212,173,49)" rx="2" ry="2" />
<text  x="596.00" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (1 samples, 0.40%)</title><rect x="196.6" y="69" width="4.6" height="15.0" fill="rgb(252,57,33)" rx="2" ry="2" />
<text  x="199.56" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (1 samples, 0.40%)</title><rect x="746.9" y="85" width="4.7" height="15.0" fill="rgb(205,7,12)" rx="2" ry="2" />
<text  x="749.92" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.79%)</title><rect x="210.6" y="37" width="9.3" height="15.0" fill="rgb(223,67,33)" rx="2" ry="2" />
<text  x="213.55" y="47.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (3 samples, 1.19%)</title><rect x="243.2" y="101" width="14.0" height="15.0" fill="rgb(243,103,5)" rx="2" ry="2" />
<text  x="246.20" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (10 samples, 3.95%)</title><rect x="434.4" y="117" width="46.7" height="15.0" fill="rgb(238,189,9)" rx="2" ry="2" />
<text  x="437.43" y="127.5" >libs..</text>
</g>
<g >
<title>payments-engine`core::str::_$LT$impl$u20$str$GT$::trim_matches::hdc1861fa69240cd8 (2 samples, 0.79%)</title><rect x="947.5" y="149" width="9.3" height="15.0" fill="rgb(207,70,41)" rx="2" ry="2" />
<text  x="950.47" y="159.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (1 samples, 0.40%)</title><rect x="1012.8" y="101" width="4.6" height="15.0" fill="rgb(247,195,46)" rx="2" ry="2" />
<text  x="1015.77" y="111.5" ></text>
</g>
<g >
<title>payments-engine`csv::string_record::StringRecord::trim::ha41170e25259e32c (70 samples, 27.67%)</title><rect x="630.3" y="165" width="326.5" height="15.0" fill="rgb(213,10,13)" rx="2" ry="2" />
<text  x="633.32" y="175.5" >payments-engine`csv::string_record::StringRe..</text>
</g>
<g >
<title>payments-engine`_$LT$std..io..Write..write_fmt..Adapter$LT$T$GT$$u20$as$u20$core..fmt..Write$GT$::write_str::h4e4a16f832fced8a (1 samples, 0.40%)</title><rect x="14.7" y="149" width="4.6" height="15.0" fill="rgb(208,49,15)" rx="2" ry="2" />
<text  x="17.66" y="159.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (11 samples, 4.35%)</title><rect x="429.8" y="133" width="51.3" height="15.0" fill="rgb(230,74,46)" rx="2" ry="2" />
<text  x="432.76" y="143.5" >libsy..</text>
</g>
<g >
<title>libsystem_malloc.dylib`set_tiny_meta_header_in_use (3 samples, 1.19%)</title><rect x="359.8" y="85" width="14.0" height="15.0" fill="rgb(207,105,45)" rx="2" ry="2" />
<text  x="362.80" y="95.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$$RF$mut$u20$csv..deserializer..DeRecordWrap$LT$T$GT$$u20$as$u20$serde..de..Deserializer$GT$::deserialize_str::hf1f5b7f00675687c (1 samples, 0.40%)</title><rect x="112.6" y="149" width="4.7" height="15.0" fill="rgb(205,181,2)" rx="2" ry="2" />
<text  x="115.61" y="159.5" ></text>
</g>
<g >
<title>payments-engine`csv::writer::Writer$LT$W$GT$::write_field::h4df6c9f8b59256ca (11 samples, 4.35%)</title><rect x="1036.1" y="149" width="51.3" height="15.0" fill="rgb(243,223,45)" rx="2" ry="2" />
<text  x="1039.09" y="159.5" >payme..</text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_size (3 samples, 1.19%)</title><rect x="243.2" y="117" width="14.0" height="15.0" fill="rgb(222,227,25)" rx="2" ry="2" />
<text  x="246.20" y="127.5" ></text>
</g>
<g >
<title>all (253 samples, 100%)</title><rect x="10.0" y="309" width="1180.0" height="15.0" fill="rgb(219,36,54)" rx="2" ry="2" />
<text  x="13.00" y="319.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (9 samples, 3.56%)</title><rect x="546.4" y="117" width="41.9" height="15.0" fill="rgb(222,86,3)" rx="2" ry="2" />
<text  x="549.36" y="127.5" >lib..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free (15 samples, 5.93%)</title><rect x="411.1" y="149" width="70.0" height="15.0" fill="rgb(233,159,13)" rx="2" ry="2" />
<text  x="414.11" y="159.5" >libsyst..</text>
</g>
<g >
<title>libsystem_kernel.dylib`write (3 samples, 1.19%)</title><rect x="1017.4" y="69" width="14.0" height="15.0" fill="rgb(249,130,48)" rx="2" ry="2" />
<text  x="1020.43" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_remove_ptr (1 samples, 0.40%)</title><rect x="891.5" y="117" width="4.7" height="15.0" fill="rgb(221,88,27)" rx="2" ry="2" />
<text  x="894.50" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (9 samples, 3.56%)</title><rect x="854.2" y="133" width="42.0" height="15.0" fill="rgb(206,117,11)" rx="2" ry="2" />
<text  x="857.19" y="143.5" >lib..</text>
</g>
<g >
<title>payments-engine`main (1 samples, 0.40%)</title><rect x="14.7" y="261" width="4.6" height="15.0" fill="rgb(254,13,53)" rx="2" ry="2" />
<text  x="17.66" y="271.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`calloc (22 samples, 8.70%)</title><rect x="649.0" y="149" width="102.6" height="15.0" fill="rgb(228,90,39)" rx="2" ry="2" />
<text  x="651.97" y="159.5" >libsystem_ma..</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (10 samples, 3.95%)</title><rect x="546.4" y="149" width="46.6" height="15.0" fill="rgb(241,172,52)" rx="2" ry="2" />
<text  x="549.36" y="159.5" >libs..</text>
</g>
<g >
<title>payments-engine`_$LT$$RF$mut$u20$csv..deserializer..DeRecordWrap$LT$T$GT$$u20$as$u20$serde..de..Deserializer$GT$::deserialize_option::hd05a51eba2220696 (4 samples, 1.58%)</title><rect x="94.0" y="149" width="18.6" height="15.0" fill="rgb(206,202,37)" rx="2" ry="2" />
<text  x="96.95" y="159.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$::deserialize::h1ccddba884c41051 (4 samples, 1.58%)</title><rect x="117.3" y="149" width="18.6" height="15.0" fill="rgb(210,108,37)" rx="2" ry="2" />
<text  x="120.27" y="159.5" ></text>
</g>
<g >
<title>payments-engine`std::rt::lang_start_internal::hdb19fe6764e59ca8 (249 samples, 98.42%)</title><rect x="28.7" y="245" width="1161.3" height="15.0" fill="rgb(219,148,9)" rx="2" ry="2" />
<text  x="31.66" y="255.5" >payments-engine`std::rt::lang_start_internal::hdb19fe6764e59ca8</text>
</g>
<g >
<title>payments-engine`hashbrown::raw::RawTable$LT$T$C$A$GT$::insert::h52528a03b1335b74 (15 samples, 5.93%)</title><rect x="1120.0" y="165" width="70.0" height="15.0" fill="rgb(244,113,44)" rx="2" ry="2" />
<text  x="1123.04" y="175.5" >payment..</text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_memset$VARIANT$Haswell (1 samples, 0.40%)</title><rect x="406.4" y="101" width="4.7" height="15.0" fill="rgb(208,1,8)" rx="2" ry="2" />
<text  x="409.44" y="111.5" ></text>
</g>
<g >
<title>payments-engine`csv::reader::Reader$LT$R$GT$::read_record::h5df4615ac9ac34bd (183 samples, 72.33%)</title><rect x="154.6" y="181" width="853.5" height="15.0" fill="rgb(248,65,45)" rx="2" ry="2" />
<text  x="157.58" y="191.5" >payments-engine`csv::reader::Reader$LT$R$GT$::read_record::h5df4615ac9ac34bd</text>
</g>
<g >
<title>libsystem_platform.dylib`_platform_bzero$VARIANT$Haswell (1 samples, 0.40%)</title><rect x="1185.3" y="133" width="4.7" height="15.0" fill="rgb(217,213,31)" rx="2" ry="2" />
<text  x="1188.34" y="143.5" ></text>
</g>
<g >
<title>payments-engine`std::io::buffered::bufwriter::BufWriter$LT$W$GT$::write_all_cold::h716d6bcf76e20628 (8 samples, 3.16%)</title><rect x="1045.4" y="101" width="37.3" height="15.0" fill="rgb(210,70,46)" rx="2" ry="2" />
<text  x="1048.42" y="111.5" >pay..</text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..StderrLock$u20$as$u20$std..io..Write$GT$::write_all::hc9990640063a1d72 (1 samples, 0.40%)</title><rect x="14.7" y="133" width="4.6" height="15.0" fill="rgb(249,153,26)" rx="2" ry="2" />
<text  x="17.66" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (4 samples, 1.58%)</title><rect x="219.9" y="69" width="18.6" height="15.0" fill="rgb(216,186,18)" rx="2" ry="2" />
<text  x="222.88" y="79.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (8 samples, 3.16%)</title><rect x="1045.4" y="85" width="37.3" height="15.0" fill="rgb(213,154,22)" rx="2" ry="2" />
<text  x="1048.42" y="95.5" >lib..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (3 samples, 1.19%)</title><rect x="877.5" y="117" width="14.0" height="15.0" fill="rgb(225,67,41)" rx="2" ry="2" />
<text  x="880.51" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc (11 samples, 4.35%)</title><rect x="896.2" y="149" width="51.3" height="15.0" fill="rgb(226,205,22)" rx="2" ry="2" />
<text  x="899.17" y="159.5" >libsy..</text>
</g>
<g >
<title>payments-engine`_$LT$$RF$mut$u20$csv..deserializer..DeRecordWrap$LT$T$GT$$u20$as$u20$serde..de..Deserializer$GT$::deserialize_struct::ha0a45faa4b82197e (17 samples, 6.72%)</title><rect x="66.0" y="165" width="79.3" height="15.0" fill="rgb(213,118,5)" rx="2" ry="2" />
<text  x="68.97" y="175.5" >payments-..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (13 samples, 5.14%)</title><rect x="690.9" y="101" width="60.7" height="15.0" fill="rgb(212,162,44)" rx="2" ry="2" />
<text  x="693.95" y="111.5" >libsys..</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_malloc (9 samples, 3.56%)</title><rect x="546.4" y="133" width="41.9" height="15.0" fill="rgb(245,3,13)" rx="2" ry="2" />
<text  x="549.36" y="143.5" >lib..</text>
</g>
<g >
<title>payments-engine`std::io::buffered::bufwriter::BufWriter$LT$W$GT$::write_all_cold::h716d6bcf76e20628 (3 samples, 1.19%)</title><rect x="1017.4" y="85" width="14.0" height="15.0" fill="rgb(254,105,19)" rx="2" ry="2" />
<text  x="1020.43" y="95.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$core..result..Result$LT$$LP$$RP$$C$E$GT$$u20$as$u20$std..process..Termination$GT$::report::h62e0b547500e40a9 (1 samples, 0.40%)</title><rect x="14.7" y="213" width="4.6" height="15.0" fill="rgb(242,147,29)" rx="2" ry="2" />
<text  x="17.66" y="223.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_calloc (20 samples, 7.91%)</title><rect x="658.3" y="133" width="93.3" height="15.0" fill="rgb(213,143,5)" rx="2" ry="2" />
<text  x="661.30" y="143.5" >libsystem_m..</text>
</g>
<g >
<title>payments-engine`0x2 (2 samples, 0.79%)</title><rect x="10.0" y="293" width="9.3" height="15.0" fill="rgb(217,49,6)" rx="2" ry="2" />
<text  x="13.00" y="303.5" ></text>
</g>
<g >
<title>payments-engine`bstr::unicode::whitespace::whitespace_len_fwd::h3987f8dbe0b390f2 (2 samples, 0.79%)</title><rect x="597.7" y="149" width="9.3" height="15.0" fill="rgb(240,196,12)" rx="2" ry="2" />
<text  x="600.67" y="159.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::h0e1a475af27637d4 (1 samples, 0.40%)</title><rect x="1012.8" y="133" width="4.6" height="15.0" fill="rgb(223,199,12)" rx="2" ry="2" />
<text  x="1015.77" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`free (9 samples, 3.56%)</title><rect x="760.9" y="149" width="42.0" height="15.0" fill="rgb(245,192,11)" rx="2" ry="2" />
<text  x="763.91" y="159.5" >lib..</text>
</g>
<g >
<title>libsystem_malloc.dylib`free_tiny (2 samples, 0.79%)</title><rect x="191.9" y="85" width="9.3" height="15.0" fill="rgb(214,48,22)" rx="2" ry="2" />
<text  x="194.90" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`default_zone_malloc (2 samples, 0.79%)</title><rect x="905.5" y="117" width="9.3" height="15.0" fill="rgb(212,45,53)" rx="2" ry="2" />
<text  x="908.49" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`calloc (23 samples, 9.09%)</title><rect x="303.8" y="149" width="107.3" height="15.0" fill="rgb(249,30,34)" rx="2" ry="2" />
<text  x="306.83" y="159.5" >libsystem_mal..</text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..StdoutLock$u20$as$u20$std..io..Write$GT$::write_all::h0e1a475af27637d4 (3 samples, 1.19%)</title><rect x="1017.4" y="101" width="14.0" height="15.0" fill="rgb(228,102,51)" rx="2" ry="2" />
<text  x="1020.43" y="111.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (7 samples, 2.77%)</title><rect x="914.8" y="117" width="32.7" height="15.0" fill="rgb(218,73,4)" rx="2" ry="2" />
<text  x="917.82" y="127.5" >li..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.79%)</title><rect x="397.1" y="69" width="9.3" height="15.0" fill="rgb(240,12,21)" rx="2" ry="2" />
<text  x="400.11" y="79.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_free_definite_size (1 samples, 0.40%)</title><rect x="177.9" y="165" width="4.7" height="15.0" fill="rgb(244,103,30)" rx="2" ry="2" />
<text  x="180.91" y="175.5" ></text>
</g>
<g >
<title>libsystem_kernel.dylib`write (1 samples, 0.40%)</title><rect x="14.7" y="117" width="4.6" height="15.0" fill="rgb(218,173,28)" rx="2" ry="2" />
<text  x="17.66" y="127.5" ></text>
</g>
<g >
<title>payments-engine`core::str::_$LT$impl$u20$str$GT$::trim_matches::hdc1861fa69240cd8 (1 samples, 0.40%)</title><rect x="257.2" y="165" width="4.7" height="15.0" fill="rgb(216,33,26)" rx="2" ry="2" />
<text  x="260.19" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (2 samples, 0.79%)</title><rect x="579.0" y="69" width="9.3" height="15.0" fill="rgb(207,179,20)" rx="2" ry="2" />
<text  x="582.01" y="79.5" ></text>
</g>
<g >
<title>payments-engine`payments_engine::main::heb8f795073cd774b (248 samples, 98.02%)</title><rect x="33.3" y="197" width="1156.7" height="15.0" fill="rgb(222,5,13)" rx="2" ry="2" />
<text  x="36.32" y="207.5" >payments-engine`payments_engine::main::heb8f795073cd774b</text>
</g>
<g >
<title>payments-engine`csv::byte_record::ByteRecord::trim::hc7c816a348c8bc84 (79 samples, 31.23%)</title><rect x="261.9" y="165" width="368.4" height="15.0" fill="rgb(244,212,32)" rx="2" ry="2" />
<text  x="264.86" y="175.5" >payments-engine`csv::byte_record::ByteRecord::trim..</text>
</g>
<g >
<title>payments-engine`hashbrown::map::HashMap$LT$K$C$V$C$S$C$A$GT$::contains_key::hcd2bdc7b32bf47e3 (3 samples, 1.19%)</title><rect x="1096.7" y="181" width="14.0" height="15.0" fill="rgb(220,127,23)" rx="2" ry="2" />
<text  x="1099.72" y="191.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (1 samples, 0.40%)</title><rect x="588.3" y="133" width="4.7" height="15.0" fill="rgb(205,2,47)" rx="2" ry="2" />
<text  x="591.34" y="143.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (20 samples, 7.91%)</title><rect x="317.8" y="117" width="93.3" height="15.0" fill="rgb(245,149,9)" rx="2" ry="2" />
<text  x="320.83" y="127.5" >libsystem_m..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_list_add_ptr (1 samples, 0.40%)</title><rect x="541.7" y="117" width="4.7" height="15.0" fill="rgb(246,50,46)" rx="2" ry="2" />
<text  x="544.70" y="127.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (1 samples, 0.40%)</title><rect x="798.2" y="133" width="4.7" height="15.0" fill="rgb(216,13,27)" rx="2" ry="2" />
<text  x="801.22" y="143.5" ></text>
</g>
<g >
<title>payments-engine`std::rt::lang_start_internal::hdb19fe6764e59ca8 (1 samples, 0.40%)</title><rect x="14.7" y="245" width="4.6" height="15.0" fill="rgb(247,225,11)" rx="2" ry="2" />
<text  x="17.66" y="255.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$$RF$std..io..stdio..Stderr$u20$as$u20$std..io..Write$GT$::write_fmt::hd0111151d6055e29 (1 samples, 0.40%)</title><rect x="14.7" y="181" width="4.6" height="15.0" fill="rgb(221,144,6)" rx="2" ry="2" />
<text  x="17.66" y="191.5" ></text>
</g>
<g >
<title>payments-engine`std::io::stdio::_eprint::hb0de3398c63acd9d (1 samples, 0.40%)</title><rect x="14.7" y="197" width="4.6" height="15.0" fill="rgb(254,125,19)" rx="2" ry="2" />
<text  x="17.66" y="207.5" ></text>
</g>
<g >
<title>payments-engine`csv_core::reader::Reader::read_record::h0f4c914e008ba131 (11 samples, 4.35%)</title><rect x="956.8" y="165" width="51.3" height="15.0" fill="rgb(231,158,49)" rx="2" ry="2" />
<text  x="959.80" y="175.5" >payme..</text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_should_clear (9 samples, 3.56%)</title><rect x="546.4" y="101" width="41.9" height="15.0" fill="rgb(230,144,31)" rx="2" ry="2" />
<text  x="549.36" y="111.5" >lib..</text>
</g>
<g >
<title>libsystem_malloc.dylib`malloc_zone_realloc (12 samples, 4.74%)</title><rect x="187.2" y="117" width="56.0" height="15.0" fill="rgb(228,215,51)" rx="2" ry="2" />
<text  x="190.23" y="127.5" >libsy..</text>
</g>
<g >
<title>payments-engine`csv::writer::Writer$LT$W$GT$::write_field::h4df6c9f8b59256ca (3 samples, 1.19%)</title><rect x="1017.4" y="133" width="14.0" height="15.0" fill="rgb(235,174,39)" rx="2" ry="2" />
<text  x="1020.43" y="143.5" ></text>
</g>
<g >
<title>payments-engine`std::sys_common::backtrace::__rust_begin_short_backtrace::h2bf061d6f8654bd9 (248 samples, 98.02%)</title><rect x="33.3" y="213" width="1156.7" height="15.0" fill="rgb(253,212,12)" rx="2" ry="2" />
<text  x="36.32" y="223.5" >payments-engine`std::sys_common::backtrace::__rust_begin_short_backtrace::h2bf061d6f8654bd9</text>
</g>
<g >
<title>libdyld.dylib`start (1 samples, 0.40%)</title><rect x="14.7" y="277" width="4.6" height="15.0" fill="rgb(215,58,17)" rx="2" ry="2" />
<text  x="17.66" y="287.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_free_no_lock (5 samples, 1.98%)</title><rect x="523.0" y="133" width="23.4" height="15.0" fill="rgb(231,124,18)" rx="2" ry="2" />
<text  x="526.04" y="143.5" >l..</text>
</g>
<g >
<title>payments-engine`core::num::dec2flt::parse::parse_number::hcb404e1dab262435 (2 samples, 0.79%)</title><rect x="103.3" y="117" width="9.3" height="15.0" fill="rgb(238,84,25)" rx="2" ry="2" />
<text  x="106.28" y="127.5" ></text>
</g>
<g >
<title>payments-engine`main (249 samples, 98.42%)</title><rect x="28.7" y="261" width="1161.3" height="15.0" fill="rgb(232,77,32)" rx="2" ry="2" />
<text  x="31.66" y="271.5" >payments-engine`main</text>
</g>
<g >
<title>payments-engine`_$LT$core..marker..PhantomData$LT$T$GT$$u20$as$u20$serde..de..DeserializeSeed$GT$::deserialize::hd9dc56c4d631148c (1 samples, 0.40%)</title><rect x="145.3" y="165" width="4.6" height="15.0" fill="rgb(209,152,44)" rx="2" ry="2" />
<text  x="148.26" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`szone_malloc_should_clear (4 samples, 1.58%)</title><rect x="201.2" y="85" width="18.7" height="15.0" fill="rgb(225,105,53)" rx="2" ry="2" />
<text  x="204.23" y="95.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_malloc_from_free_list (2 samples, 0.79%)</title><rect x="579.0" y="85" width="9.3" height="15.0" fill="rgb(209,5,41)" rx="2" ry="2" />
<text  x="582.01" y="95.5" ></text>
</g>
<g >
<title>payments-engine`payments_engine::_::_$LT$impl$u20$serde..ser..Serialize$u20$for$u20$payments_engine..Account$GT$::serialize::h341ded80a0fb9f46 (17 samples, 6.72%)</title><rect x="1017.4" y="165" width="79.3" height="15.0" fill="rgb(231,73,18)" rx="2" ry="2" />
<text  x="1020.43" y="175.5" >payments-..</text>
</g>
<g >
<title>payments-engine`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h76b74fc43f9b8b37 (248 samples, 98.02%)</title><rect x="33.3" y="229" width="1156.7" height="15.0" fill="rgb(234,91,1)" rx="2" ry="2" />
<text  x="36.32" y="239.5" >payments-engine`std::rt::lang_start::_$u7b$$u7b$closure$u7d$$u7d$::h76b74fc43f9b8b37</text>
</g>
<g >
<title>payments-engine`hashbrown::raw::RawTable$LT$T$C$A$GT$::reserve_rehash::h53f5dbc1867e0fe6 (12 samples, 4.74%)</title><rect x="1134.0" y="149" width="56.0" height="15.0" fill="rgb(253,154,36)" rx="2" ry="2" />
<text  x="1137.03" y="159.5" >payme..</text>
</g>
<g >
<title>libsystem_kernel.dylib`read (1 samples, 0.40%)</title><rect x="173.2" y="165" width="4.7" height="15.0" fill="rgb(237,148,31)" rx="2" ry="2" />
<text  x="176.24" y="175.5" ></text>
</g>
<g >
<title>libsystem_malloc.dylib`tiny_size (3 samples, 1.19%)</title><rect x="784.2" y="117" width="14.0" height="15.0" fill="rgb(249,123,47)" rx="2" ry="2" />
<text  x="787.23" y="127.5" ></text>
</g>
<g >
<title>payments-engine`csv_core::writer::Writer::field::h7438da8891589054 (1 samples, 0.40%)</title><rect x="1082.7" y="133" width="4.7" height="15.0" fill="rgb(218,70,16)" rx="2" ry="2" />
<text  x="1085.73" y="143.5" ></text>
</g>
<g >
<title>payments-engine`ryu::pretty::format32::h3c9fd972baa7d7e0 (2 samples, 0.79%)</title><rect x="1087.4" y="149" width="9.3" height="15.0" fill="rgb(220,140,10)" rx="2" ry="2" />
<text  x="1090.39" y="159.5" ></text>
</g>
<g >
<title>payments-engine`_$LT$std..io..stdio..Stdout$u20$as$u20$std..io..Write$GT$::write_all::hd621440410b66c32 (1 samples, 0.40%)</title><rect x="1012.8" y="149" width="4.6" height="15.0" fill="rgb(234,145,20)" rx="2" ry="2" />
<text  x="1015.77" y="159.5" ></text>
</g>
<g >
<title>payments-engine`core::fmt::write::hb6b947db0e571766 (1 samples, 0.40%)</title><rect x="14.7" y="165" width="4.6" height="15.0" fill="rgb(250,216,34)" rx="2" ry="2" />
<text  x="17.66" y="175.5" ></text>
</g>
<g >
<title>payments-engine`0x4 (251 samples, 99.21%)</title><rect x="19.3" y="293" width="1170.7" height="15.0" fill="rgb(244,26,8)" rx="2" ry="2" />
<text  x="22.33" y="303.5" >payments-engine`0x4</text>
</g>
<g >
<title>payments-engine`ryu::pretty::format32::h3c9fd972baa7d7e0 (1 samples, 0.40%)</title><rect x="1031.4" y="133" width="4.7" height="15.0" fill="rgb(236,166,34)" rx="2" ry="2" />
<text  x="1034.42" y="143.5" ></text>
</g>
</g>
</svg>
